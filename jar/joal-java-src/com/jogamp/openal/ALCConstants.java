/* !---- DO NOT EDIT: This file autogenerated by com/jogamp/gluegen/JavaEmitter.java on Fri Aug 18 14:49:20 CEST 2023 ----! */
/* !---- Java-Unit: [pkg com.jogamp.openal, cls ALCConstants], ../build/gensrc/classes/com/jogamp/openal/ALCConstants.java ----! */

package com.jogamp.openal;

import com.jogamp.gluegen.runtime.*;
import com.jogamp.common.os.*;
import com.jogamp.common.nio.*;
import java.nio.*;
import com.jogamp.common.util.*;
import java.util.Set;
import java.util.Map;
import java.util.HashMap;
import java.nio.charset.Charset;
import java.nio.charset.StandardCharsets;

public interface ALCConstants {

  /** Define "ALC_DEVICE_SPECIFIER" with expression '<code>0x1005</code>', CType: int */
  public static final int ALC_DEVICE_SPECIFIER = 0x1005;
  /** Define "ALC_CAPTURE_SAMPLES" with expression '<code>0x312</code>', CType: int */
  public static final int ALC_CAPTURE_SAMPLES = 0x312;
  /** Define "ALC_NO_ERROR" with expression '<code>0</code>', CType: int */
  public static final int ALC_NO_ERROR = 0x0;
  /** Define "ALC_ALL_ATTRIBUTES" with expression '<code>0x1003</code>', CType: int */
  public static final int ALC_ALL_ATTRIBUTES = 0x1003;
  /** Define "ALC_EXT_CAPTURE" with expression '<code>1</code>', CType: int */
  public static final int ALC_EXT_CAPTURE = 0x1;
  /** Define "ALC_OUT_OF_MEMORY" with expression '<code>0xA005</code>', CType: int */
  public static final int ALC_OUT_OF_MEMORY = 0xa005;
  /** Define "ALC_CAPTURE_DEVICE_SPECIFIER" with expression '<code>0x310</code>', CType: int */
  public static final int ALC_CAPTURE_DEVICE_SPECIFIER = 0x310;
  /** Define "ALC_MINOR_VERSION" with expression '<code>0x1001</code>', CType: int */
  public static final int ALC_MINOR_VERSION = 0x1001;
  /** Define "ALC_TRUE" with expression '<code>1</code>', CType: int */
  public static final int ALC_TRUE = 0x1;
  /** Define "ALC_ENUMERATE_ALL_EXT" with expression '<code>1</code>', CType: int */
  public static final int ALC_ENUMERATE_ALL_EXT = 0x1;
  /** Define "ALC_INVALID_ENUM" with expression '<code>0xA003</code>', CType: int */
  public static final int ALC_INVALID_ENUM = 0xa003;
  /** Define "ALC_MONO_SOURCES" with expression '<code>0x1010</code>', CType: int */
  public static final int ALC_MONO_SOURCES = 0x1010;
  /** Define "ALC_EXTENSIONS" with expression '<code>0x1006</code>', CType: int */
  public static final int ALC_EXTENSIONS = 0x1006;
  /** Define "ALC_CAPTURE_DEFAULT_DEVICE_SPECIFIER" with expression '<code>0x311</code>', CType: int */
  public static final int ALC_CAPTURE_DEFAULT_DEVICE_SPECIFIER = 0x311;
  /** Define "ALC_REFRESH" with expression '<code>0x1008</code>', CType: int */
  public static final int ALC_REFRESH = 0x1008;
  /** Define "ALC_INVALID_CONTEXT" with expression '<code>0xA002</code>', CType: int */
  public static final int ALC_INVALID_CONTEXT = 0xa002;
  /** Define "ALC_INVALID" with expression '<code>0</code>', CType: int */
  public static final int ALC_INVALID = 0x0;
  /** Define "ALC_STEREO_SOURCES" with expression '<code>0x1011</code>', CType: int */
  public static final int ALC_STEREO_SOURCES = 0x1011;
  /** Define "ALC_INVALID_VALUE" with expression '<code>0xA004</code>', CType: int */
  public static final int ALC_INVALID_VALUE = 0xa004;
  /** Define "ALC_MAJOR_VERSION" with expression '<code>0x1000</code>', CType: int */
  public static final int ALC_MAJOR_VERSION = 0x1000;
  /** Define "ALC_DEFAULT_ALL_DEVICES_SPECIFIER" with expression '<code>0x1012</code>', CType: int */
  public static final int ALC_DEFAULT_ALL_DEVICES_SPECIFIER = 0x1012;
  /** Define "ALC_VERSION_0_1" with expression '<code>1</code>', CType: int */
  public static final int ALC_VERSION_0_1 = 0x1;
  /** Define "ALC_ALL_DEVICES_SPECIFIER" with expression '<code>0x1013</code>', CType: int */
  public static final int ALC_ALL_DEVICES_SPECIFIER = 0x1013;
  /** Define "ALC_FALSE" with expression '<code>0</code>', CType: int */
  public static final int ALC_FALSE = 0x0;
  /** Define "ALC_DEFAULT_DEVICE_SPECIFIER" with expression '<code>0x1004</code>', CType: int */
  public static final int ALC_DEFAULT_DEVICE_SPECIFIER = 0x1004;
  /** Define "ALC_INVALID_DEVICE" with expression '<code>0xA001</code>', CType: int */
  public static final int ALC_INVALID_DEVICE = 0xa001;
  /** Define "ALC_FREQUENCY" with expression '<code>0x1007</code>', CType: int */
  public static final int ALC_FREQUENCY = 0x1007;
  /** Define "ALC_SYNC" with expression '<code>0x1009</code>', CType: int */
  public static final int ALC_SYNC = 0x1009;
  /** Define "ALC_ATTRIBUTES_SIZE" with expression '<code>0x1002</code>', CType: int */
  public static final int ALC_ATTRIBUTES_SIZE = 0x1002;

} // end of class ALCConstants
