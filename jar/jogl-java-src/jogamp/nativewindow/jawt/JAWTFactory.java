/* !---- DO NOT EDIT: This file autogenerated by com/jogamp/gluegen/JavaEmitter.java on Fri Aug 18 14:57:08 CEST 2023 ----! */
/* !---- Java-Unit: [pkg jogamp.nativewindow.jawt, cls JAWTFactory], ../build/nativewindow/gensrc/classes/jogamp/nativewindow/jawt/JAWTFactory.java ----! */

package jogamp.nativewindow.jawt;

import java.security.*;
import jogamp.nativewindow.jawt.*;
import com.jogamp.common.os.Platform;
import com.jogamp.common.util.VersionNumber;
import com.jogamp.common.util.SecurityUtil;
import com.jogamp.gluegen.runtime.*;
import com.jogamp.common.os.*;
import com.jogamp.common.nio.*;
import java.nio.*;
import com.jogamp.common.util.*;
import java.util.Set;
import java.util.Map;
import java.util.HashMap;
import java.nio.charset.Charset;
import java.nio.charset.StandardCharsets;

public class JAWTFactory {

  /** Defined as part of enum type "jobjectRefType" with expression '<code>0</code>', CType: int */
  public static final int JNIInvalidRefType = 0x0;
  /** Defined as part of enum type "jobjectRefType" with expression '<code>1</code>', CType: int */
  public static final int JNILocalRefType = 0x1;
  /** Defined as part of enum type "jobjectRefType" with expression '<code>2</code>', CType: int */
  public static final int JNIGlobalRefType = 0x2;
  /** Defined as part of enum type "jobjectRefType" with expression '<code>3</code>', CType: int */
  public static final int JNIWeakGlobalRefType = 0x3;
  /** Define "JNI_ENOMEM" with expression '<code>(-4)</code>', CType: int */
  public static final int JNI_ENOMEM = ( - 0x4 );
  /** Define "JNI_EEXIST" with expression '<code>(-5)</code>', CType: int */
  public static final int JNI_EEXIST = ( - 0x5 );
  /** Define "JNI_ABORT" with expression '<code>2</code>', CType: int */
  public static final int JNI_ABORT = 0x2;
  /** Define "JAWT_LOCK_CLIP_CHANGED" with expression '<code>0x00000002</code>', CType: int */
  public static final int JAWT_LOCK_CLIP_CHANGED = 0x2;
  /** Define "JAWT_VERSION_1_3" with expression '<code>0x00010003</code>', CType: int */
  public static final int JAWT_VERSION_1_3 = 0x10003;
  /** Define "JNI_ERR" with expression '<code>(-1)</code>', CType: int */
  public static final int JNI_ERR = ( - 0x1 );
  /** Define "JAWT_LOCK_ERROR" with expression '<code>0x00000001</code>', CType: int */
  public static final int JAWT_LOCK_ERROR = 0x1;
  /** Define "JAWT_VERSION_1_4" with expression '<code>0x00010004</code>', CType: int */
  public static final int JAWT_VERSION_1_4 = 0x10004;
  /** Define "JAWT_LOCK_SURFACE_CHANGED" with expression '<code>0x00000008</code>', CType: int */
  public static final int JAWT_LOCK_SURFACE_CHANGED = 0x8;
  /** Define "JNI_EVERSION" with expression '<code>(-3)</code>', CType: int */
  public static final int JNI_EVERSION = ( - 0x3 );
  /** Define "JNI_VERSION_1_1" with expression '<code>0x00010001</code>', CType: int */
  public static final int JNI_VERSION_1_1 = 0x10001;
  /** Define "JNI_VERSION_1_2" with expression '<code>0x00010002</code>', CType: int */
  public static final int JNI_VERSION_1_2 = 0x10002;
  /** Define "JNI_OK" with expression '<code>0</code>', CType: int */
  public static final int JNI_OK = 0x0;
  /** Define "JNI_VERSION_1_6" with expression '<code>0x00010006</code>', CType: int */
  public static final int JNI_VERSION_1_6 = 0x10006;
  /** Define "JNI_VERSION_1_4" with expression '<code>0x00010004</code>', CType: int */
  public static final int JNI_VERSION_1_4 = 0x10004;
  /** Define "JAWT_LOCK_BOUNDS_CHANGED" with expression '<code>0x00000004</code>', CType: int */
  public static final int JAWT_LOCK_BOUNDS_CHANGED = 0x4;
  /** Define "JNI_FALSE" with expression '<code>0</code>', CType: int */
  public static final int JNI_FALSE = 0x0;
  /** Define "JNI_VERSION_1_8" with expression '<code>0x00010008</code>', CType: int */
  public static final int JNI_VERSION_1_8 = 0x10008;
  /** Define "JNI_EDETACHED" with expression '<code>(-2)</code>', CType: int */
  public static final int JNI_EDETACHED = ( - 0x2 );
  /** Define "JNI_EINVAL" with expression '<code>(-6)</code>', CType: int */
  public static final int JNI_EINVAL = ( - 0x6 );
  /** Define "JNI_TRUE" with expression '<code>1</code>', CType: int */
  public static final int JNI_TRUE = 0x1;
  /** Define "JNI_COMMIT" with expression '<code>1</code>', CType: int */
  public static final int JNI_COMMIT = 0x1;

  /** Interface to C language function: <br> <code>jboolean JAWT_GetAWT(JNIEnv *  env, JAWT *  awt)</code><br>   */
  public static boolean JAWT_GetAWT(JAWT awt)  {

        return JAWT_GetAWT1(((awt == null) ? null : awt.getBuffer()));
  }

  /** Entry point to C language function: <code>jboolean JAWT_GetAWT(JNIEnv *  env, JAWT *  awt)</code><br>   */
  private static native boolean JAWT_GetAWT1(ByteBuffer awt);

} // end of class JAWTFactory
