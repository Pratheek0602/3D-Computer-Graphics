/* !---- DO NOT EDIT: This file autogenerated by com/jogamp/gluegen/opengl/GLEmitter.java on Fri Aug 18 14:57:41 CEST 2023 ----! */
/* !---- Java-Unit: [pkg com.jogamp.opengl, cls GLES1], ../build/jogl/gensrc/classes/com/jogamp/opengl/GLES1.java ----! */

package com.jogamp.opengl;

import java.util.*;
import com.jogamp.opengl.*;
import com.jogamp.opengl.fixedfunc.*;
import jogamp.opengl.*;
import com.jogamp.opengl.GLES1;
import com.jogamp.opengl.GLES2;
import com.jogamp.opengl.GL2;
import com.jogamp.common.nio.Buffers;
import com.jogamp.opengl.util.GLBuffers;
import com.jogamp.gluegen.runtime.*;
import com.jogamp.common.os.*;
import com.jogamp.common.nio.*;
import java.nio.*;
import com.jogamp.common.util.*;
import java.util.Set;
import java.util.Map;
import java.util.HashMap;
import java.nio.charset.Charset;
import java.nio.charset.StandardCharsets;

 /**
  * <p>This interface contains all OpenGL ES [ 1.0 .. 1.1 ] methods,
  * as well as most of it's extensions defined at the time of this specification.</p>
  */
public interface GLES1 extends GL2ES1{

  /** <code>GL_EXT_multisampled_render_to_texture</code>, <code>GL_EXT_framebuffer_multisample</code><br>Define "GL_MAX_SAMPLES_EXT" with expression '<code>0x8D57</code>', CType: int */
  public static final int GL_MAX_SAMPLES_EXT = 0x8d57;
  /** <code>GL_VERSION_1_0</code>, <code>GL_OES_texture_cube_map</code><br>Alias for: <code>GL_TEXTURE_GEN_MODE_OES</code><br>
Define "GL_TEXTURE_GEN_MODE" with expression '<code>0x2500</code>', CType: int */
  public static final int GL_TEXTURE_GEN_MODE = 0x2500;
  /** <code>GL_QCOM_extended_get</code><br>Define "GL_TEXTURE_FORMAT_QCOM" with expression '<code>0x8BD6</code>', CType: int */
  public static final int GL_TEXTURE_FORMAT_QCOM = 0x8bd6;
  /** <code>GL_OES_matrix_palette</code><br>Define "GL_WEIGHT_ARRAY_OES" with expression '<code>0x86AD</code>', CType: int */
  public static final int GL_WEIGHT_ARRAY_OES = 0x86ad;
  /** <code>GL_VERSION_1_3</code>, <code>GL_OES_texture_cube_map</code>, <code>GL_NV_texgen_reflection</code>, <code>GL_ARB_texture_cube_map</code>, <code>GL_EXT_texture_cube_map</code><br>Alias for: <code>GL_NORMAL_MAP_OES</code>, <code>GL_NORMAL_MAP_NV</code>, <code>GL_NORMAL_MAP_ARB</code>, <code>GL_NORMAL_MAP_EXT</code><br>
Define "GL_NORMAL_MAP" with expression '<code>0x8511</code>', CType: int */
  public static final int GL_NORMAL_MAP = 0x8511;
  /** <code>GL_OES_point_size_array</code><br>Define "GL_POINT_SIZE_ARRAY_POINTER_OES" with expression '<code>0x898C</code>', CType: int */
  public static final int GL_POINT_SIZE_ARRAY_POINTER_OES = 0x898c;
  /** <code>GL_OES_point_size_array</code><br>Define "GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES" with expression '<code>0x8B9F</code>', CType: int */
  public static final int GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES = 0x8b9f;
  /** <code>GL_OES_EGL_image_external</code><br>Define "GL_TEXTURE_EXTERNAL_OES" with expression '<code>0x8D65</code>', CType: int */
  public static final int GL_TEXTURE_EXTERNAL_OES = 0x8d65;
  /** <code>GL_OES_matrix_palette</code><br>Define "GL_MAX_VERTEX_UNITS_OES" with expression '<code>0x86A4</code>', CType: int */
  public static final int GL_MAX_VERTEX_UNITS_OES = 0x86a4;
  /** <code>GL_IMG_multisampled_render_to_texture</code><br>Define "GL_RENDERBUFFER_SAMPLES_IMG" with expression '<code>0x9133</code>', CType: int */
  public static final int GL_RENDERBUFFER_SAMPLES_IMG = 0x9133;
  /** <code>GL_QCOM_tiled_rendering</code><br>Define "GL_MULTISAMPLE_BUFFER_BIT3_QCOM" with expression '<code>0x08000000</code>', CType: int */
  public static final int GL_MULTISAMPLE_BUFFER_BIT3_QCOM = 0x8000000;
  /** <code>GL_IMG_texture_compression_pvrtc</code><br>Define "GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG" with expression '<code>0x8C01</code>', CType: int */
  public static final int GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG = 0x8c01;
  /** <code>GL_QCOM_tiled_rendering</code><br>Define "GL_STENCIL_BUFFER_BIT3_QCOM" with expression '<code>0x00080000</code>', CType: int */
  public static final int GL_STENCIL_BUFFER_BIT3_QCOM = 0x80000;
  /** <code>GL_IMG_texture_compression_pvrtc</code><br>Define "GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG" with expression '<code>0x8C03</code>', CType: int */
  public static final int GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG = 0x8c03;
  /** <code>GL_OES_matrix_palette</code><br>Define "GL_CURRENT_PALETTE_MATRIX_OES" with expression '<code>0x8843</code>', CType: int */
  public static final int GL_CURRENT_PALETTE_MATRIX_OES = 0x8843;
  /** <code>GL_OES_matrix_palette</code><br>Define "GL_MATRIX_INDEX_ARRAY_POINTER_OES" with expression '<code>0x8849</code>', CType: int */
  public static final int GL_MATRIX_INDEX_ARRAY_POINTER_OES = 0x8849;
  /** <code>GL_IMG_user_clip_plane</code><br>Define "GL_CLIP_PLANE5_IMG" with expression '<code>0x3005</code>', CType: int */
  public static final int GL_CLIP_PLANE5_IMG = 0x3005;
  /** <code>GL_QCOM_tiled_rendering</code><br>Define "GL_STENCIL_BUFFER_BIT2_QCOM" with expression '<code>0x00040000</code>', CType: int */
  public static final int GL_STENCIL_BUFFER_BIT2_QCOM = 0x40000;
  /** <code>GL_OES_matrix_palette</code><br>Define "GL_WEIGHT_ARRAY_BUFFER_BINDING_OES" with expression '<code>0x889E</code>', CType: int */
  public static final int GL_WEIGHT_ARRAY_BUFFER_BINDING_OES = 0x889e;
  /** <code>GL_QCOM_tiled_rendering</code><br>Define "GL_MULTISAMPLE_BUFFER_BIT7_QCOM" with expression '<code>0x80000000</code>', CType: long */
  public static final long GL_MULTISAMPLE_BUFFER_BIT7_QCOM = 0x80000000L;
  /** <code>GL_QCOM_tiled_rendering</code><br>Define "GL_DEPTH_BUFFER_BIT6_QCOM" with expression '<code>0x00004000</code>', CType: int */
  public static final int GL_DEPTH_BUFFER_BIT6_QCOM = 0x4000;
  /** <code>GL_QCOM_tiled_rendering</code><br>Define "GL_COLOR_BUFFER_BIT7_QCOM" with expression '<code>0x00000080</code>', CType: int */
  public static final int GL_COLOR_BUFFER_BIT7_QCOM = 0x80;
  /** <code>GL_QCOM_extended_get</code><br>Define "GL_TEXTURE_TYPE_QCOM" with expression '<code>0x8BD7</code>', CType: int */
  public static final int GL_TEXTURE_TYPE_QCOM = 0x8bd7;
  /** <code>GL_QCOM_extended_get</code><br>Define "GL_TEXTURE_IMAGE_VALID_QCOM" with expression '<code>0x8BD8</code>', CType: int */
  public static final int GL_TEXTURE_IMAGE_VALID_QCOM = 0x8bd8;
  /** <code>GL_QCOM_tiled_rendering</code><br>Define "GL_COLOR_BUFFER_BIT6_QCOM" with expression '<code>0x00000040</code>', CType: int */
  public static final int GL_COLOR_BUFFER_BIT6_QCOM = 0x40;
  /** <code>GL_QCOM_tiled_rendering</code><br>Define "GL_DEPTH_BUFFER_BIT5_QCOM" with expression '<code>0x00002000</code>', CType: int */
  public static final int GL_DEPTH_BUFFER_BIT5_QCOM = 0x2000;
  /** <code>GL_QCOM_extended_get</code><br>Define "GL_STATE_RESTORE" with expression '<code>0x8BDC</code>', CType: int */
  public static final int GL_STATE_RESTORE = 0x8bdc;
  /** <code>GL_VERSION_1_3</code>, <code>GL_OES_texture_cube_map</code>, <code>GL_ARB_texture_cube_map</code>, <code>GL_EXT_texture_cube_map</code>, <code>GL_NV_texgen_reflection</code><br>Alias for: <code>GL_REFLECTION_MAP_OES</code>, <code>GL_REFLECTION_MAP_ARB</code>, <code>GL_REFLECTION_MAP_EXT</code>, <code>GL_REFLECTION_MAP_NV</code><br>
Define "GL_REFLECTION_MAP" with expression '<code>0x8512</code>', CType: int */
  public static final int GL_REFLECTION_MAP = 0x8512;
  /** <code>GL_OES_vertex_array_object</code><br>Define "GL_VERTEX_ARRAY_BINDING_OES" with expression '<code>0x85B5</code>', CType: int */
  public static final int GL_VERTEX_ARRAY_BINDING_OES = 0x85b5;
  /** <code>GL_QCOM_tiled_rendering</code><br>Define "GL_COLOR_BUFFER_BIT0_QCOM" with expression '<code>0x00000001</code>', CType: int */
  public static final int GL_COLOR_BUFFER_BIT0_QCOM = 0x1;
  /** <code>GL_QCOM_tiled_rendering</code><br>Define "GL_DEPTH_BUFFER_BIT3_QCOM" with expression '<code>0x00000800</code>', CType: int */
  public static final int GL_DEPTH_BUFFER_BIT3_QCOM = 0x800;
  /** <code>GL_OES_matrix_palette</code><br>Define "GL_MAX_PALETTE_MATRICES_OES" with expression '<code>0x8842</code>', CType: int */
  public static final int GL_MAX_PALETTE_MATRICES_OES = 0x8842;
  /** <code>GL_OES_texture_cube_map</code><br>Alias for: <code>GL_TEXTURE_GEN_STR_OES</code><br>
Define "GL_TEXTURE_GEN_STR" with expression '<code>0x8D60</code>', CType: int */
  public static final int GL_TEXTURE_GEN_STR = 0x8d60;
  /** <code>GL_QCOM_tiled_rendering</code><br>Define "GL_COLOR_BUFFER_BIT2_QCOM" with expression '<code>0x00000004</code>', CType: int */
  public static final int GL_COLOR_BUFFER_BIT2_QCOM = 0x4;
  /** <code>GL_QCOM_tiled_rendering</code><br>Define "GL_DEPTH_BUFFER_BIT1_QCOM" with expression '<code>0x00000200</code>', CType: int */
  public static final int GL_DEPTH_BUFFER_BIT1_QCOM = 0x200;
  /** <code>GL_QCOM_tiled_rendering</code><br>Define "GL_MULTISAMPLE_BUFFER_BIT2_QCOM" with expression '<code>0x04000000</code>', CType: int */
  public static final int GL_MULTISAMPLE_BUFFER_BIT2_QCOM = 0x4000000;
  /** <code>GL_QCOM_tiled_rendering</code><br>Define "GL_MULTISAMPLE_BUFFER_BIT4_QCOM" with expression '<code>0x10000000</code>', CType: int */
  public static final int GL_MULTISAMPLE_BUFFER_BIT4_QCOM = 0x10000000;
  /** <code>GL_QCOM_extended_get</code><br>Define "GL_TEXTURE_WIDTH_QCOM" with expression '<code>0x8BD2</code>', CType: int */
  public static final int GL_TEXTURE_WIDTH_QCOM = 0x8bd2;
  /** <code>GL_AMD_compressed_ATC_texture</code><br>Define "GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD" with expression '<code>0x87EE</code>', CType: int */
  public static final int GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD = 0x87ee;
  /** <code>GL_QCOM_tiled_rendering</code><br>Define "GL_COLOR_BUFFER_BIT4_QCOM" with expression '<code>0x00000010</code>', CType: int */
  public static final int GL_COLOR_BUFFER_BIT4_QCOM = 0x10;
  /** <code>GL_AMD_compressed_ATC_texture</code><br>Define "GL_ATC_RGBA_EXPLICIT_ALPHA_AMD" with expression '<code>0x8C93</code>', CType: int */
  public static final int GL_ATC_RGBA_EXPLICIT_ALPHA_AMD = 0x8c93;
  /** <code>GL_IMG_user_clip_plane</code><br>Define "GL_CLIP_PLANE4_IMG" with expression '<code>0x3004</code>', CType: int */
  public static final int GL_CLIP_PLANE4_IMG = 0x3004;
  /** <code>GL_EXT_discard_framebuffer</code><br>Define "GL_DEPTH_EXT" with expression '<code>0x1801</code>', CType: int */
  public static final int GL_DEPTH_EXT = 0x1801;
  /** <code>GL_IMG_texture_env_enhanced_fixed_function</code><br>Define "GL_DOT3_RGBA_IMG" with expression '<code>0x86AF</code>', CType: int */
  public static final int GL_DOT3_RGBA_IMG = 0x86af;
  /** <code>GL_QCOM_tiled_rendering</code><br>Define "GL_MULTISAMPLE_BUFFER_BIT6_QCOM" with expression '<code>0x40000000</code>', CType: int */
  public static final int GL_MULTISAMPLE_BUFFER_BIT6_QCOM = 0x40000000;
  /** <code>GL_IMG_texture_env_enhanced_fixed_function</code><br>Define "GL_FACTOR_ALPHA_MODULATE_IMG" with expression '<code>0x8C07</code>', CType: int */
  public static final int GL_FACTOR_ALPHA_MODULATE_IMG = 0x8c07;
  /** <code>GL_OES_matrix_palette</code><br>Define "GL_MATRIX_INDEX_ARRAY_STRIDE_OES" with expression '<code>0x8848</code>', CType: int */
  public static final int GL_MATRIX_INDEX_ARRAY_STRIDE_OES = 0x8848;
  /** <code>GL_QCOM_extended_get</code><br>Define "GL_TEXTURE_HEIGHT_QCOM" with expression '<code>0x8BD3</code>', CType: int */
  public static final int GL_TEXTURE_HEIGHT_QCOM = 0x8bd3;
  /** <code>GL_QCOM_tiled_rendering</code><br>Define "GL_STENCIL_BUFFER_BIT7_QCOM" with expression '<code>0x00800000</code>', CType: int */
  public static final int GL_STENCIL_BUFFER_BIT7_QCOM = 0x800000;
  /** <code>GL_IMG_multisampled_render_to_texture</code><br>Define "GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG" with expression '<code>0x9134</code>', CType: int */
  public static final int GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG = 0x9134;
  /** <code>GL_IMG_user_clip_plane</code><br>Define "GL_MAX_CLIP_PLANES_IMG" with expression '<code>0x0D32</code>', CType: int */
  public static final int GL_MAX_CLIP_PLANES_IMG = 0xd32;
  /** <code>GL_EXT_discard_framebuffer</code><br>Define "GL_COLOR_EXT" with expression '<code>0x1800</code>', CType: int */
  public static final int GL_COLOR_EXT = 0x1800;
  /** <code>GL_IMG_user_clip_plane</code><br>Define "GL_CLIP_PLANE3_IMG" with expression '<code>0x3003</code>', CType: int */
  public static final int GL_CLIP_PLANE3_IMG = 0x3003;
  /** <code>GL_IMG_texture_env_enhanced_fixed_function</code><br>Define "GL_ADD_BLEND_IMG" with expression '<code>0x8C09</code>', CType: int */
  public static final int GL_ADD_BLEND_IMG = 0x8c09;
  /** <code>GL_OES_point_size_array</code><br>Define "GL_POINT_SIZE_ARRAY_OES" with expression '<code>0x8B9C</code>', CType: int */
  public static final int GL_POINT_SIZE_ARRAY_OES = 0x8b9c;
  /** <code>GL_QCOM_tiled_rendering</code><br>Define "GL_STENCIL_BUFFER_BIT5_QCOM" with expression '<code>0x00200000</code>', CType: int */
  public static final int GL_STENCIL_BUFFER_BIT5_QCOM = 0x200000;
  /** <code>GL_OES_compressed_ETC1_RGB8_texture</code><br>Define "GL_ETC1_RGB8_OES" with expression '<code>0x8D64</code>', CType: int */
  public static final int GL_ETC1_RGB8_OES = 0x8d64;
  /** <code>GL_APPLE_texture_max_level</code><br>Define "GL_TEXTURE_MAX_LEVEL_APPLE" with expression '<code>0x813D</code>', CType: int */
  public static final int GL_TEXTURE_MAX_LEVEL_APPLE = 0x813d;
  /** <code>GL_IMG_read_format</code><br>Define "GL_UNSIGNED_SHORT_4_4_4_4_REV_IMG" with expression '<code>0x8365</code>', CType: int */
  public static final int GL_UNSIGNED_SHORT_4_4_4_4_REV_IMG = 0x8365;
  /** <code>GL_QCOM_extended_get</code><br>Define "GL_TEXTURE_TARGET_QCOM" with expression '<code>0x8BDA</code>', CType: int */
  public static final int GL_TEXTURE_TARGET_QCOM = 0x8bda;
  /** <code>GL_IMG_texture_env_enhanced_fixed_function</code><br>Define "GL_TEXTURE_ALPHA_MODULATE_IMG" with expression '<code>0x8C06</code>', CType: int */
  public static final int GL_TEXTURE_ALPHA_MODULATE_IMG = 0x8c06;
  /** <code>GL_QCOM_tiled_rendering</code><br>Define "GL_STENCIL_BUFFER_BIT0_QCOM" with expression '<code>0x00010000</code>', CType: int */
  public static final int GL_STENCIL_BUFFER_BIT0_QCOM = 0x10000;
  /** <code>GL_OES_matrix_get</code><br>Define "GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES" with expression '<code>0x898F</code>', CType: int */
  public static final int GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES = 0x898f;
  /** <code>GL_AMD_compressed_3DC_texture</code><br>Define "GL_3DC_X_AMD" with expression '<code>0x87F9</code>', CType: int */
  public static final int GL_3DC_X_AMD = 0x87f9;
  /** <code>GL_OES_EGL_image_external</code><br>Define "GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES" with expression '<code>0x8D68</code>', CType: int */
  public static final int GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES = 0x8d68;
  /** <code>GL_QCOM_perfmon_global_mode</code><br>Define "GL_PERFMON_GLOBAL_MODE_QCOM" with expression '<code>0x8FA0</code>', CType: int */
  public static final int GL_PERFMON_GLOBAL_MODE_QCOM = 0x8fa0;
  /** <code>GL_IMG_read_format</code><br>Define "GL_BGRA_IMG" with expression '<code>0x80E1</code>', CType: int */
  public static final int GL_BGRA_IMG = 0x80e1;
  /** <code>GL_IMG_user_clip_plane</code><br>Define "GL_CLIP_PLANE2_IMG" with expression '<code>0x3002</code>', CType: int */
  public static final int GL_CLIP_PLANE2_IMG = 0x3002;
  /** <code>GL_QCOM_extended_get</code><br>Define "GL_TEXTURE_INTERNAL_FORMAT_QCOM" with expression '<code>0x8BD5</code>', CType: int */
  public static final int GL_TEXTURE_INTERNAL_FORMAT_QCOM = 0x8bd5;
  /** <code>GL_QCOM_extended_get</code><br>Define "GL_TEXTURE_DEPTH_QCOM" with expression '<code>0x8BD4</code>', CType: int */
  public static final int GL_TEXTURE_DEPTH_QCOM = 0x8bd4;
  /** <code>GL_QCOM_tiled_rendering</code><br>Define "GL_COLOR_BUFFER_BIT1_QCOM" with expression '<code>0x00000002</code>', CType: int */
  public static final int GL_COLOR_BUFFER_BIT1_QCOM = 0x2;
  /** <code>GL_QCOM_tiled_rendering</code><br>Define "GL_DEPTH_BUFFER_BIT0_QCOM" with expression '<code>0x00000100</code>', CType: int */
  public static final int GL_DEPTH_BUFFER_BIT0_QCOM = 0x100;
  /** <code>GL_QCOM_tiled_rendering</code><br>Define "GL_STENCIL_BUFFER_BIT1_QCOM" with expression '<code>0x00020000</code>', CType: int */
  public static final int GL_STENCIL_BUFFER_BIT1_QCOM = 0x20000;
  /** <code>GL_EXT_discard_framebuffer</code><br>Define "GL_STENCIL_EXT" with expression '<code>0x1802</code>', CType: int */
  public static final int GL_STENCIL_EXT = 0x1802;
  /** <code>GL_QCOM_tiled_rendering</code><br>Define "GL_COLOR_BUFFER_BIT5_QCOM" with expression '<code>0x00000020</code>', CType: int */
  public static final int GL_COLOR_BUFFER_BIT5_QCOM = 0x20;
  /** <code>GL_QCOM_tiled_rendering</code><br>Define "GL_DEPTH_BUFFER_BIT4_QCOM" with expression '<code>0x00001000</code>', CType: int */
  public static final int GL_DEPTH_BUFFER_BIT4_QCOM = 0x1000;
  /** <code>GL_IMG_texture_compression_pvrtc</code><br>Define "GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG" with expression '<code>0x8C00</code>', CType: int */
  public static final int GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG = 0x8c00;
  /** <code>GL_IMG_multisampled_render_to_texture</code><br>Define "GL_TEXTURE_SAMPLES_IMG" with expression '<code>0x9136</code>', CType: int */
  public static final int GL_TEXTURE_SAMPLES_IMG = 0x9136;
  /** <code>GL_AMD_compressed_ATC_texture</code><br>Define "GL_ATC_RGB_AMD" with expression '<code>0x8C92</code>', CType: int */
  public static final int GL_ATC_RGB_AMD = 0x8c92;
  /** <code>GL_IMG_texture_env_enhanced_fixed_function</code><br>Define "GL_MODULATE_COLOR_IMG" with expression '<code>0x8C04</code>', CType: int */
  public static final int GL_MODULATE_COLOR_IMG = 0x8c04;
  /** <code>GL_OES_matrix_palette</code><br>Define "GL_MATRIX_PALETTE_OES" with expression '<code>0x8840</code>', CType: int */
  public static final int GL_MATRIX_PALETTE_OES = 0x8840;
  /** <code>GL_EXT_multisampled_render_to_texture</code><br>Define "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT" with expression '<code>0x8D6C</code>', CType: int */
  public static final int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT = 0x8d6c;
  /** <code>GL_EXT_multisampled_render_to_texture</code>, <code>GL_EXT_framebuffer_multisample</code><br>Define "GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT" with expression '<code>0x8D56</code>', CType: int */
  public static final int GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT = 0x8d56;
  /** <code>GL_OES_point_size_array</code><br>Define "GL_POINT_SIZE_ARRAY_TYPE_OES" with expression '<code>0x898A</code>', CType: int */
  public static final int GL_POINT_SIZE_ARRAY_TYPE_OES = 0x898a;
  /** <code>GL_QCOM_tiled_rendering</code><br>Define "GL_STENCIL_BUFFER_BIT4_QCOM" with expression '<code>0x00100000</code>', CType: int */
  public static final int GL_STENCIL_BUFFER_BIT4_QCOM = 0x100000;
  /** <code>GL_IMG_multisampled_render_to_texture</code><br>Define "GL_MAX_SAMPLES_IMG" with expression '<code>0x9135</code>', CType: int */
  public static final int GL_MAX_SAMPLES_IMG = 0x9135;
  /** <code>GL_AMD_compressed_3DC_texture</code><br>Define "GL_3DC_XY_AMD" with expression '<code>0x87FA</code>', CType: int */
  public static final int GL_3DC_XY_AMD = 0x87fa;
  /** <code>GL_QCOM_extended_get</code><br>Define "GL_TEXTURE_NUM_LEVELS_QCOM" with expression '<code>0x8BD9</code>', CType: int */
  public static final int GL_TEXTURE_NUM_LEVELS_QCOM = 0x8bd9;
  /** <code>GL_QCOM_tiled_rendering</code><br>Define "GL_MULTISAMPLE_BUFFER_BIT1_QCOM" with expression '<code>0x02000000</code>', CType: int */
  public static final int GL_MULTISAMPLE_BUFFER_BIT1_QCOM = 0x2000000;
  /** <code>GL_QCOM_writeonly_rendering</code><br>Define "GL_WRITEONLY_RENDERING_QCOM" with expression '<code>0x8823</code>', CType: int */
  public static final int GL_WRITEONLY_RENDERING_QCOM = 0x8823;
  /** <code>GL_IMG_user_clip_plane</code><br>Define "GL_CLIP_PLANE1_IMG" with expression '<code>0x3001</code>', CType: int */
  public static final int GL_CLIP_PLANE1_IMG = 0x3001;
  /** <code>GL_OES_matrix_get</code><br>Define "GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES" with expression '<code>0x898E</code>', CType: int */
  public static final int GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES = 0x898e;
  /** <code>GL_OES_EGL_image_external</code><br>Define "GL_TEXTURE_BINDING_EXTERNAL_OES" with expression '<code>0x8D67</code>', CType: int */
  public static final int GL_TEXTURE_BINDING_EXTERNAL_OES = 0x8d67;
  /** <code>GL_OES_matrix_palette</code><br>Define "GL_MATRIX_INDEX_ARRAY_OES" with expression '<code>0x8844</code>', CType: int */
  public static final int GL_MATRIX_INDEX_ARRAY_OES = 0x8844;
  /** <code>GL_OES_draw_texture</code><br>Define "GL_TEXTURE_CROP_RECT_OES" with expression '<code>0x8B9D</code>', CType: int */
  public static final int GL_TEXTURE_CROP_RECT_OES = 0x8b9d;
  /** <code>GL_OES_point_size_array</code><br>Define "GL_POINT_SIZE_ARRAY_STRIDE_OES" with expression '<code>0x898B</code>', CType: int */
  public static final int GL_POINT_SIZE_ARRAY_STRIDE_OES = 0x898b;
  /** <code>GL_OES_matrix_get</code><br>Define "GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES" with expression '<code>0x898D</code>', CType: int */
  public static final int GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES = 0x898d;
  /** <code>GL_OES_matrix_palette</code><br>Define "GL_MATRIX_INDEX_ARRAY_TYPE_OES" with expression '<code>0x8847</code>', CType: int */
  public static final int GL_MATRIX_INDEX_ARRAY_TYPE_OES = 0x8847;
  /** <code>GL_OES_matrix_palette</code><br>Define "GL_WEIGHT_ARRAY_POINTER_OES" with expression '<code>0x86AC</code>', CType: int */
  public static final int GL_WEIGHT_ARRAY_POINTER_OES = 0x86ac;
  /** <code>GL_QCOM_tiled_rendering</code><br>Define "GL_MULTISAMPLE_BUFFER_BIT0_QCOM" with expression '<code>0x01000000</code>', CType: int */
  public static final int GL_MULTISAMPLE_BUFFER_BIT0_QCOM = 0x1000000;
  /** <code>GL_OES_matrix_palette</code><br>Define "GL_MATRIX_INDEX_ARRAY_SIZE_OES" with expression '<code>0x8846</code>', CType: int */
  public static final int GL_MATRIX_INDEX_ARRAY_SIZE_OES = 0x8846;
  /** <code>GL_IMG_user_clip_plane</code><br>Define "GL_CLIP_PLANE0_IMG" with expression '<code>0x3000</code>', CType: int */
  public static final int GL_CLIP_PLANE0_IMG = 0x3000;
  /** <code>GL_OES_matrix_palette</code><br>Define "GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES" with expression '<code>0x8B9E</code>', CType: int */
  public static final int GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES = 0x8b9e;
  /** <code>GL_IMG_texture_compression_pvrtc</code><br>Define "GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG" with expression '<code>0x8C02</code>', CType: int */
  public static final int GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG = 0x8c02;
  /** <code>GL_IMG_texture_env_enhanced_fixed_function</code><br>Define "GL_FRAGMENT_ALPHA_MODULATE_IMG" with expression '<code>0x8C08</code>', CType: int */
  public static final int GL_FRAGMENT_ALPHA_MODULATE_IMG = 0x8c08;
  /** <code>GL_OES_matrix_palette</code><br>Define "GL_WEIGHT_ARRAY_STRIDE_OES" with expression '<code>0x86AA</code>', CType: int */
  public static final int GL_WEIGHT_ARRAY_STRIDE_OES = 0x86aa;
  /** <code>GL_QCOM_tiled_rendering</code><br>Define "GL_DEPTH_BUFFER_BIT7_QCOM" with expression '<code>0x00008000</code>', CType: int */
  public static final int GL_DEPTH_BUFFER_BIT7_QCOM = 0x8000;
  /** <code>GL_QCOM_tiled_rendering</code><br>Define "GL_STENCIL_BUFFER_BIT6_QCOM" with expression '<code>0x00400000</code>', CType: int */
  public static final int GL_STENCIL_BUFFER_BIT6_QCOM = 0x400000;
  /** <code>GL_QCOM_tiled_rendering</code><br>Define "GL_MULTISAMPLE_BUFFER_BIT5_QCOM" with expression '<code>0x20000000</code>', CType: int */
  public static final int GL_MULTISAMPLE_BUFFER_BIT5_QCOM = 0x20000000;
  /** <code>GL_OES_matrix_palette</code><br>Define "GL_WEIGHT_ARRAY_TYPE_OES" with expression '<code>0x86A9</code>', CType: int */
  public static final int GL_WEIGHT_ARRAY_TYPE_OES = 0x86a9;
  /** <code>GL_EXT_multisampled_render_to_texture</code>, <code>GL_EXT_framebuffer_multisample</code><br>Define "GL_RENDERBUFFER_SAMPLES_EXT" with expression '<code>0x8CAB</code>', CType: int */
  public static final int GL_RENDERBUFFER_SAMPLES_EXT = 0x8cab;
  /** <code>GL_IMG_texture_env_enhanced_fixed_function</code><br>Define "GL_RECIP_ADD_SIGNED_ALPHA_IMG" with expression '<code>0x8C05</code>', CType: int */
  public static final int GL_RECIP_ADD_SIGNED_ALPHA_IMG = 0x8c05;
  /** <code>GL_QCOM_extended_get</code><br>Define "GL_TEXTURE_OBJECT_VALID_QCOM" with expression '<code>0x8BDB</code>', CType: int */
  public static final int GL_TEXTURE_OBJECT_VALID_QCOM = 0x8bdb;
  /** <code>GL_OES_matrix_palette</code><br>Define "GL_WEIGHT_ARRAY_SIZE_OES" with expression '<code>0x86AB</code>', CType: int */
  public static final int GL_WEIGHT_ARRAY_SIZE_OES = 0x86ab;
  /** <code>GL_QCOM_tiled_rendering</code><br>Define "GL_COLOR_BUFFER_BIT3_QCOM" with expression '<code>0x00000008</code>', CType: int */
  public static final int GL_COLOR_BUFFER_BIT3_QCOM = 0x8;
  /** <code>GL_QCOM_tiled_rendering</code><br>Define "GL_DEPTH_BUFFER_BIT2_QCOM" with expression '<code>0x00000400</code>', CType: int */
  public static final int GL_DEPTH_BUFFER_BIT2_QCOM = 0x400;

  /** Entry point to C language function: <code> void {@native glClipPlanef}(GLenum plane, const GLfloat *  equation) </code> <br>Part of <code>GL_VERSION_ES_CM</code>, <code>GL_IMG_user_clip_plane</code>, <code>GL_OES_single_precision</code><br>Alias for: <code>glClipPlanefIMG</code>, <code>glClipPlanefOES</code>
      @param equation a direct or array-backed {@link java.nio.FloatBuffer}   */
  public void glClipPlanef(int plane, FloatBuffer equation);

  /** Entry point to C language function: <code> void {@native glClipPlanef}(GLenum plane, const GLfloat *  equation) </code> <br>Part of <code>GL_VERSION_ES_CM</code>, <code>GL_IMG_user_clip_plane</code>, <code>GL_OES_single_precision</code><br>Alias for: <code>glClipPlanefIMG</code>, <code>glClipPlanefOES</code>   */
  public void glClipPlanef(int plane, float[] equation, int equation_offset);

  /** Entry point to C language function: <code> void {@native glGetClipPlanef}(GLenum pname, GLfloat *  equation) </code> <br>Part of <code>GL_VERSION_ES_CM</code>, <code>GL_OES_single_precision</code><br>Alias for: <code>glGetClipPlanefOES</code>
      @param equation a direct or array-backed {@link java.nio.FloatBuffer}   */
  public void glGetClipPlanef(int pname, FloatBuffer equation);

  /** Entry point to C language function: <code> void {@native glGetClipPlanef}(GLenum pname, GLfloat *  equation) </code> <br>Part of <code>GL_VERSION_ES_CM</code>, <code>GL_OES_single_precision</code><br>Alias for: <code>glGetClipPlanefOES</code>   */
  public void glGetClipPlanef(int pname, float[] equation, int equation_offset);

  /** Entry point to C language function: <code> void {@native glAlphaFuncx}(GLenum func, GLclampx ref) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glAlphaFuncxOES</code>   */
  public void glAlphaFuncx(int func, int ref);

  /** Entry point to C language function: <code> void {@native glClearColorx}(GLclampx red, GLclampx green, GLclampx blue, GLclampx alpha) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glClearColorxOES</code>   */
  public void glClearColorx(int red, int green, int blue, int alpha);

  /** Entry point to C language function: <code> void {@native glClearDepthx}(GLclampx depth) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glClearDepthxOES</code>   */
  public void glClearDepthx(int depth);

  /** Entry point to C language function: <code> void {@native glClipPlanex}(GLenum plane, const GLfixed *  equation) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code>, <code>GL_IMG_user_clip_plane</code><br>Alias for: <code>glClipPlanexOES</code>, <code>glClipPlanexIMG</code>
      @param equation a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glClipPlanex(int plane, IntBuffer equation);

  /** Entry point to C language function: <code> void {@native glClipPlanex}(GLenum plane, const GLfixed *  equation) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code>, <code>GL_IMG_user_clip_plane</code><br>Alias for: <code>glClipPlanexOES</code>, <code>glClipPlanexIMG</code>   */
  public void glClipPlanex(int plane, int[] equation, int equation_offset);

  /** Entry point to C language function: <code> void {@native glColor4x}(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glColor4xOES</code>   */
  public void glColor4x(int red, int green, int blue, int alpha);

  /** Entry point to C language function: <code> void {@native glDepthRangex}(GLclampx zNear, GLclampx zFar) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glDepthRangexOES</code>   */
  public void glDepthRangex(int zNear, int zFar);

  /** Entry point to C language function: <code> void {@native glFogx}(GLenum pname, GLfixed param) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glFogxOES</code>   */
  public void glFogx(int pname, int param);

  /** Entry point to C language function: <code> void {@native glFogxv}(GLenum pname, const GLfixed *  params) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glFogxvOES</code>
      @param params a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glFogxv(int pname, IntBuffer params);

  /** Entry point to C language function: <code> void {@native glFogxv}(GLenum pname, const GLfixed *  params) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glFogxvOES</code>   */
  public void glFogxv(int pname, int[] params, int params_offset);

  /** Entry point to C language function: <code> void {@native glFrustumx}(GLfixed left, GLfixed right, GLfixed bottom, GLfixed top, GLfixed zNear, GLfixed zFar) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glFrustumxOES</code>   */
  public void glFrustumx(int left, int right, int bottom, int top, int zNear, int zFar);

  /** Entry point to C language function: <code> void {@native glGetClipPlanex}(GLenum pname, GLfixed *  eqn) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glGetClipPlanexOES</code>
      @param eqn a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glGetClipPlanex(int pname, IntBuffer eqn);

  /** Entry point to C language function: <code> void {@native glGetClipPlanex}(GLenum pname, GLfixed *  eqn) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glGetClipPlanexOES</code>   */
  public void glGetClipPlanex(int pname, int[] eqn, int eqn_offset);

  /** Entry point to C language function: <code> void {@native glGetFixedv}(GLenum pname, GLfixed *  params) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glGetFixedvOES</code>
      @param params a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glGetFixedv(int pname, IntBuffer params);

  /** Entry point to C language function: <code> void {@native glGetFixedv}(GLenum pname, GLfixed *  params) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glGetFixedvOES</code>   */
  public void glGetFixedv(int pname, int[] params, int params_offset);

  /** Entry point to C language function: <code> void {@native glGetLightxv}(GLenum light, GLenum pname, GLfixed *  params) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glGetLightxvOES</code>
      @param params a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glGetLightxv(int light, int pname, IntBuffer params);

  /** Entry point to C language function: <code> void {@native glGetLightxv}(GLenum light, GLenum pname, GLfixed *  params) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glGetLightxvOES</code>   */
  public void glGetLightxv(int light, int pname, int[] params, int params_offset);

  /** Entry point to C language function: <code> void {@native glGetMaterialxv}(GLenum face, GLenum pname, GLfixed *  params) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glGetMaterialxvOES</code>
      @param params a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glGetMaterialxv(int face, int pname, IntBuffer params);

  /** Entry point to C language function: <code> void {@native glGetMaterialxv}(GLenum face, GLenum pname, GLfixed *  params) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glGetMaterialxvOES</code>   */
  public void glGetMaterialxv(int face, int pname, int[] params, int params_offset);

  /** Entry point to C language function: <code> void {@native glGetTexEnvxv}(GLenum tenv, GLenum pname, GLfixed *  params) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glGetTexEnvxvOES</code>
      @param params a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glGetTexEnvxv(int tenv, int pname, IntBuffer params);

  /** Entry point to C language function: <code> void {@native glGetTexEnvxv}(GLenum tenv, GLenum pname, GLfixed *  params) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glGetTexEnvxvOES</code>   */
  public void glGetTexEnvxv(int tenv, int pname, int[] params, int params_offset);

  /** Entry point to C language function: <code> void {@native glGetTexParameterxv}(GLenum target, GLenum pname, GLfixed *  params) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glGetTexParameterxvOES</code>
      @param params a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glGetTexParameterxv(int target, int pname, IntBuffer params);

  /** Entry point to C language function: <code> void {@native glGetTexParameterxv}(GLenum target, GLenum pname, GLfixed *  params) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glGetTexParameterxvOES</code>   */
  public void glGetTexParameterxv(int target, int pname, int[] params, int params_offset);

  /** Entry point to C language function: <code> void {@native glLightModelx}(GLenum pname, GLfixed param) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glLightModelxOES</code>   */
  public void glLightModelx(int pname, int param);

  /** Entry point to C language function: <code> void {@native glLightModelxv}(GLenum pname, const GLfixed *  params) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glLightModelxvOES</code>
      @param params a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glLightModelxv(int pname, IntBuffer params);

  /** Entry point to C language function: <code> void {@native glLightModelxv}(GLenum pname, const GLfixed *  params) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glLightModelxvOES</code>   */
  public void glLightModelxv(int pname, int[] params, int params_offset);

  /** Entry point to C language function: <code> void {@native glLightx}(GLenum light, GLenum pname, GLfixed param) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glLightxOES</code>   */
  public void glLightx(int light, int pname, int param);

  /** Entry point to C language function: <code> void {@native glLightxv}(GLenum light, GLenum pname, const GLfixed *  params) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glLightxvOES</code>
      @param params a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glLightxv(int light, int pname, IntBuffer params);

  /** Entry point to C language function: <code> void {@native glLightxv}(GLenum light, GLenum pname, const GLfixed *  params) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glLightxvOES</code>   */
  public void glLightxv(int light, int pname, int[] params, int params_offset);

  /** Entry point to C language function: <code> void {@native glLineWidthx}(GLfixed width) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glLineWidthxOES</code>   */
  public void glLineWidthx(int width);

  /** Entry point to C language function: <code> void {@native glLoadMatrixx}(const GLfixed *  m) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glLoadMatrixxOES</code>
      @param m a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glLoadMatrixx(IntBuffer m);

  /** Entry point to C language function: <code> void {@native glLoadMatrixx}(const GLfixed *  m) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glLoadMatrixxOES</code>   */
  public void glLoadMatrixx(int[] m, int m_offset);

  /** Entry point to C language function: <code> void {@native glMaterialx}(GLenum face, GLenum pname, GLfixed param) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glMaterialxOES</code>   */
  public void glMaterialx(int face, int pname, int param);

  /** Entry point to C language function: <code> void {@native glMaterialxv}(GLenum face, GLenum pname, const GLfixed *  params) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glMaterialxvOES</code>
      @param params a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glMaterialxv(int face, int pname, IntBuffer params);

  /** Entry point to C language function: <code> void {@native glMaterialxv}(GLenum face, GLenum pname, const GLfixed *  params) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glMaterialxvOES</code>   */
  public void glMaterialxv(int face, int pname, int[] params, int params_offset);

  /** Entry point to C language function: <code> void {@native glMultMatrixx}(const GLfixed *  m) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glMultMatrixxOES</code>
      @param m a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glMultMatrixx(IntBuffer m);

  /** Entry point to C language function: <code> void {@native glMultMatrixx}(const GLfixed *  m) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glMultMatrixxOES</code>   */
  public void glMultMatrixx(int[] m, int m_offset);

  /** Entry point to C language function: <code> void {@native glMultiTexCoord4x}(GLenum target, GLfixed s, GLfixed t, GLfixed r, GLfixed q) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glMultiTexCoord4xOES</code>   */
  public void glMultiTexCoord4x(int target, int s, int t, int r, int q);

  /** Entry point to C language function: <code> void {@native glNormal3x}(GLfixed nx, GLfixed ny, GLfixed nz) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glNormal3xOES</code>   */
  public void glNormal3x(int nx, int ny, int nz);

  /** Entry point to C language function: <code> void {@native glOrthox}(GLfixed left, GLfixed right, GLfixed bottom, GLfixed top, GLfixed zNear, GLfixed zFar) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glOrthoxOES</code>   */
  public void glOrthox(int left, int right, int bottom, int top, int zNear, int zFar);

  /** Entry point to C language function: <code> void {@native glPointParameterx}(GLenum pname, GLfixed param) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glPointParameterxOES</code>   */
  public void glPointParameterx(int pname, int param);

  /** Entry point to C language function: <code> void {@native glPointParameterxv}(GLenum pname, const GLfixed *  params) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glPointParameterxvOES</code>
      @param params a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glPointParameterxv(int pname, IntBuffer params);

  /** Entry point to C language function: <code> void {@native glPointParameterxv}(GLenum pname, const GLfixed *  params) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glPointParameterxvOES</code>   */
  public void glPointParameterxv(int pname, int[] params, int params_offset);

  /** Entry point to C language function: <code> void {@native glPointSizex}(GLfixed size) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glPointSizexOES</code>   */
  public void glPointSizex(int size);

  /** Entry point to C language function: <code> void {@native glPolygonOffsetx}(GLfixed factor, GLfixed units) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glPolygonOffsetxOES</code>   */
  public void glPolygonOffsetx(int factor, int units);

  /** Entry point to C language function: <code> void {@native glRotatex}(GLfixed angle, GLfixed x, GLfixed y, GLfixed z) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glRotatexOES</code>   */
  public void glRotatex(int angle, int x, int y, int z);

  /** Entry point to C language function: <code> void {@native glSampleCoveragex}(GLclampx value, GLboolean invert) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glSampleCoveragexOES</code>   */
  public void glSampleCoveragex(int value, boolean invert);

  /** Entry point to C language function: <code> void {@native glScalex}(GLfixed x, GLfixed y, GLfixed z) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glScalexOES</code>   */
  public void glScalex(int x, int y, int z);

  /** Entry point to C language function: <code> void {@native glTexEnvx}(GLenum target, GLenum pname, GLfixed param) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glTexEnvxOES</code>   */
  public void glTexEnvx(int target, int pname, int param);

  /** Entry point to C language function: <code> void {@native glTexEnvxv}(GLenum target, GLenum pname, const GLfixed *  params) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glTexEnvxvOES</code>
      @param params a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glTexEnvxv(int target, int pname, IntBuffer params);

  /** Entry point to C language function: <code> void {@native glTexEnvxv}(GLenum target, GLenum pname, const GLfixed *  params) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glTexEnvxvOES</code>   */
  public void glTexEnvxv(int target, int pname, int[] params, int params_offset);

  /** Entry point to C language function: <code> void {@native glTexParameterx}(GLenum target, GLenum pname, GLfixed param) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glTexParameterxOES</code>   */
  public void glTexParameterx(int target, int pname, int param);

  /** Entry point to C language function: <code> void {@native glTexParameterxv}(GLenum target, GLenum pname, const GLfixed *  params) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glTexParameterxvOES</code>
      @param params a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glTexParameterxv(int target, int pname, IntBuffer params);

  /** Entry point to C language function: <code> void {@native glTexParameterxv}(GLenum target, GLenum pname, const GLfixed *  params) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glTexParameterxvOES</code>   */
  public void glTexParameterxv(int target, int pname, int[] params, int params_offset);

  /** Entry point to C language function: <code> void {@native glTranslatex}(GLfixed x, GLfixed y, GLfixed z) </code> <br>Part of <code>GL_VERSION_ES_CL_CM</code>, <code>GL_OES_fixed_point</code><br>Alias for: <code>glTranslatexOES</code>   */
  public void glTranslatex(int x, int y, int z);

  /** Entry point to C language function: <code> void {@native glPointSizePointerOES}(GLenum type, GLsizei stride, const GLvoid *  pointer) </code> <br>Part of <code>GL_OES_point_size_array</code><br>
      @param pointer a direct or array-backed {@link java.nio.Buffer}   */
  public void glPointSizePointerOES(int type, int stride, Buffer pointer);

  /** Entry point to C language function: <code> void {@native glDrawTexsOES}(GLshort x, GLshort y, GLshort z, GLshort width, GLshort height) </code> <br>Part of <code>GL_OES_draw_texture</code><br>   */
  public void glDrawTexsOES(short x, short y, short z, short width, short height);

  /** Entry point to C language function: <code> void {@native glDrawTexiOES}(GLint x, GLint y, GLint z, GLint width, GLint height) </code> <br>Part of <code>GL_OES_draw_texture</code><br>   */
  public void glDrawTexiOES(int x, int y, int z, int width, int height);

  /** Entry point to C language function: <code> void {@native glDrawTexxOES}(GLfixed x, GLfixed y, GLfixed z, GLfixed width, GLfixed height) </code> <br>Part of <code>GL_OES_draw_texture</code><br>   */
  public void glDrawTexxOES(int x, int y, int z, int width, int height);

  /** Entry point to C language function: <code> void {@native glDrawTexsvOES}(const GLshort *  coords) </code> <br>Part of <code>GL_OES_draw_texture</code><br>
      @param coords a direct or array-backed {@link java.nio.ShortBuffer}   */
  public void glDrawTexsvOES(ShortBuffer coords);

  /** Entry point to C language function: <code> void {@native glDrawTexsvOES}(const GLshort *  coords) </code> <br>Part of <code>GL_OES_draw_texture</code><br>   */
  public void glDrawTexsvOES(short[] coords, int coords_offset);

  /** Entry point to C language function: <code> void {@native glDrawTexivOES}(const GLint *  coords) </code> <br>Part of <code>GL_OES_draw_texture</code><br>
      @param coords a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glDrawTexivOES(IntBuffer coords);

  /** Entry point to C language function: <code> void {@native glDrawTexivOES}(const GLint *  coords) </code> <br>Part of <code>GL_OES_draw_texture</code><br>   */
  public void glDrawTexivOES(int[] coords, int coords_offset);

  /** Entry point to C language function: <code> void {@native glDrawTexxvOES}(const GLfixed *  coords) </code> <br>Part of <code>GL_OES_draw_texture</code><br>
      @param coords a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glDrawTexxvOES(IntBuffer coords);

  /** Entry point to C language function: <code> void {@native glDrawTexxvOES}(const GLfixed *  coords) </code> <br>Part of <code>GL_OES_draw_texture</code><br>   */
  public void glDrawTexxvOES(int[] coords, int coords_offset);

  /** Entry point to C language function: <code> void {@native glDrawTexfOES}(GLfloat x, GLfloat y, GLfloat z, GLfloat width, GLfloat height) </code> <br>Part of <code>GL_OES_draw_texture</code><br>   */
  public void glDrawTexfOES(float x, float y, float z, float width, float height);

  /** Entry point to C language function: <code> void {@native glDrawTexfvOES}(const GLfloat *  coords) </code> <br>Part of <code>GL_OES_draw_texture</code><br>
      @param coords a direct or array-backed {@link java.nio.FloatBuffer}   */
  public void glDrawTexfvOES(FloatBuffer coords);

  /** Entry point to C language function: <code> void {@native glDrawTexfvOES}(const GLfloat *  coords) </code> <br>Part of <code>GL_OES_draw_texture</code><br>   */
  public void glDrawTexfvOES(float[] coords, int coords_offset);

  /** Entry point to C language function: <code> void {@native glEGLImageTargetTexture2DOES}(GLenum target, GLeglImageOES image) </code> <br>Part of <code>GL_OES_EGL_image</code><br>   */
  public void glEGLImageTargetTexture2DOES(int target, long image);

  /** Entry point to C language function: <code> void {@native glEGLImageTargetRenderbufferStorageOES}(GLenum target, GLeglImageOES image) </code> <br>Part of <code>GL_OES_EGL_image</code><br>   */
  public void glEGLImageTargetRenderbufferStorageOES(int target, long image);

  /** Entry point to C language function: <code> void {@native glCurrentPaletteMatrixOES}(GLuint matrixpaletteindex) </code> <br>Part of <code>GL_OES_matrix_palette</code><br>   */
  public void glCurrentPaletteMatrixOES(int matrixpaletteindex);

  /** Entry point to C language function: <code> void {@native glLoadPaletteFromModelViewMatrixOES}() </code> <br>Part of <code>GL_OES_matrix_palette</code><br>   */
  public void glLoadPaletteFromModelViewMatrixOES();

  /** Entry point to C language function: <code> void {@native glMatrixIndexPointerOES}(GLint size, GLenum type, GLsizei stride, const GLvoid *  pointer) </code> <br>Part of <code>GL_OES_matrix_palette</code><br>
      @param pointer a direct or array-backed {@link java.nio.Buffer}   */
  public void glMatrixIndexPointerOES(int size, int type, int stride, Buffer pointer);

  /** Entry point to C language function: <code> void {@native glWeightPointerOES}(GLint size, GLenum type, GLsizei stride, const GLvoid *  pointer) </code> <br>Part of <code>GL_OES_matrix_palette</code><br>
      @param pointer a direct or array-backed {@link java.nio.Buffer}   */
  public void glWeightPointerOES(int size, int type, int stride, Buffer pointer);

  /** Entry point to C language function: <code> GLbitfield {@native glQueryMatrixxOES}(GLfixed *  mantissa, GLint *  exponent) </code> <br>Part of <code>GL_OES_query_matrix</code><br>
      @param mantissa a direct or array-backed {@link java.nio.IntBuffer}
      @param exponent a direct or array-backed {@link java.nio.IntBuffer}   */
  public int glQueryMatrixxOES(IntBuffer mantissa, IntBuffer exponent);

  /** Entry point to C language function: <code> GLbitfield {@native glQueryMatrixxOES}(GLfixed *  mantissa, GLint *  exponent) </code> <br>Part of <code>GL_OES_query_matrix</code><br>   */
  public int glQueryMatrixxOES(int[] mantissa, int mantissa_offset, int[] exponent, int exponent_offset);

  /** Entry point to C language function: <code> void {@native glTexGenf}(GLenum coord, GLenum pname, GLfloat param) </code> <br>Part of <code>GL_VERSION_1_0</code>, <code>GL_OES_texture_cube_map</code><br>Alias for: <code>glTexGenfOES</code>   */
  public void glTexGenf(int coord, int pname, float param);

  /** Entry point to C language function: <code> void {@native glTexGenfv}(GLenum coord, GLenum pname, const GLfloat *  params) </code> <br>Part of <code>GL_VERSION_1_0</code>, <code>GL_OES_texture_cube_map</code><br>Alias for: <code>glTexGenfvOES</code>
      @param params a direct or array-backed {@link java.nio.FloatBuffer}   */
  public void glTexGenfv(int coord, int pname, FloatBuffer params);

  /** Entry point to C language function: <code> void {@native glTexGenfv}(GLenum coord, GLenum pname, const GLfloat *  params) </code> <br>Part of <code>GL_VERSION_1_0</code>, <code>GL_OES_texture_cube_map</code><br>Alias for: <code>glTexGenfvOES</code>   */
  public void glTexGenfv(int coord, int pname, float[] params, int params_offset);

  /** Entry point to C language function: <code> void {@native glTexGeni}(GLenum coord, GLenum pname, GLint param) </code> <br>Part of <code>GL_VERSION_1_0</code>, <code>GL_OES_texture_cube_map</code><br>Alias for: <code>glTexGeniOES</code>   */
  public void glTexGeni(int coord, int pname, int param);

  /** Entry point to C language function: <code> void {@native glTexGeniv}(GLenum coord, GLenum pname, const GLint *  params) </code> <br>Part of <code>GL_VERSION_1_0</code>, <code>GL_OES_texture_cube_map</code><br>Alias for: <code>glTexGenivOES</code>
      @param params a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glTexGeniv(int coord, int pname, IntBuffer params);

  /** Entry point to C language function: <code> void {@native glTexGeniv}(GLenum coord, GLenum pname, const GLint *  params) </code> <br>Part of <code>GL_VERSION_1_0</code>, <code>GL_OES_texture_cube_map</code><br>Alias for: <code>glTexGenivOES</code>   */
  public void glTexGeniv(int coord, int pname, int[] params, int params_offset);

  /** Entry point to C language function: <code> void {@native glTexGenx}(GLenum coord, GLenum pname, GLfixed param) </code> <br>Part of <code>GL_OES_fixed_point</code>, <code>GL_OES_texture_cube_map</code><br>Alias for: <code>glTexGenxOES</code>   */
  public void glTexGenx(int coord, int pname, int param);

  /** Entry point to C language function: <code> void {@native glTexGenxv}(GLenum coord, GLenum pname, const GLfixed *  params) </code> <br>Part of <code>GL_OES_fixed_point</code>, <code>GL_OES_texture_cube_map</code><br>Alias for: <code>glTexGenxvOES</code>
      @param params a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glTexGenxv(int coord, int pname, IntBuffer params);

  /** Entry point to C language function: <code> void {@native glTexGenxv}(GLenum coord, GLenum pname, const GLfixed *  params) </code> <br>Part of <code>GL_OES_fixed_point</code>, <code>GL_OES_texture_cube_map</code><br>Alias for: <code>glTexGenxvOES</code>   */
  public void glTexGenxv(int coord, int pname, int[] params, int params_offset);

  /** Entry point to C language function: <code> void {@native glGetTexGenfv}(GLenum coord, GLenum pname, GLfloat *  params) </code> <br>Part of <code>GL_VERSION_1_0</code>, <code>GL_OES_texture_cube_map</code><br>Alias for: <code>glGetTexGenfvOES</code>
      @param params a direct or array-backed {@link java.nio.FloatBuffer}   */
  public void glGetTexGenfv(int coord, int pname, FloatBuffer params);

  /** Entry point to C language function: <code> void {@native glGetTexGenfv}(GLenum coord, GLenum pname, GLfloat *  params) </code> <br>Part of <code>GL_VERSION_1_0</code>, <code>GL_OES_texture_cube_map</code><br>Alias for: <code>glGetTexGenfvOES</code>   */
  public void glGetTexGenfv(int coord, int pname, float[] params, int params_offset);

  /** Entry point to C language function: <code> void {@native glGetTexGeniv}(GLenum coord, GLenum pname, GLint *  params) </code> <br>Part of <code>GL_VERSION_1_0</code>, <code>GL_OES_texture_cube_map</code><br>Alias for: <code>glGetTexGenivOES</code>
      @param params a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glGetTexGeniv(int coord, int pname, IntBuffer params);

  /** Entry point to C language function: <code> void {@native glGetTexGeniv}(GLenum coord, GLenum pname, GLint *  params) </code> <br>Part of <code>GL_VERSION_1_0</code>, <code>GL_OES_texture_cube_map</code><br>Alias for: <code>glGetTexGenivOES</code>   */
  public void glGetTexGeniv(int coord, int pname, int[] params, int params_offset);

  /** Entry point to C language function: <code> void {@native glGetTexGenxv}(GLenum coord, GLenum pname, GLfixed *  params) </code> <br>Part of <code>GL_OES_fixed_point</code>, <code>GL_OES_texture_cube_map</code><br>Alias for: <code>glGetTexGenxvOES</code>
      @param params a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glGetTexGenxv(int coord, int pname, IntBuffer params);

  /** Entry point to C language function: <code> void {@native glGetTexGenxv}(GLenum coord, GLenum pname, GLfixed *  params) </code> <br>Part of <code>GL_OES_fixed_point</code>, <code>GL_OES_texture_cube_map</code><br>Alias for: <code>glGetTexGenxvOES</code>   */
  public void glGetTexGenxv(int coord, int pname, int[] params, int params_offset);

  /** Entry point to C language function: <code> void {@native glBindVertexArrayOES}(GLuint array) </code> <br>Part of <code>GL_OES_vertex_array_object</code><br>   */
  public void glBindVertexArrayOES(int array);

  /** Entry point to C language function: <code> void {@native glDeleteVertexArraysOES}(GLsizei n, const GLuint *  arrays) </code> <br>Part of <code>GL_OES_vertex_array_object</code><br>
      @param arrays a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glDeleteVertexArraysOES(int n, IntBuffer arrays);

  /** Entry point to C language function: <code> void {@native glDeleteVertexArraysOES}(GLsizei n, const GLuint *  arrays) </code> <br>Part of <code>GL_OES_vertex_array_object</code><br>   */
  public void glDeleteVertexArraysOES(int n, int[] arrays, int arrays_offset);

  /** Entry point to C language function: <code> void {@native glGenVertexArraysOES}(GLsizei n, GLuint *  arrays) </code> <br>Part of <code>GL_OES_vertex_array_object</code><br>
      @param arrays a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glGenVertexArraysOES(int n, IntBuffer arrays);

  /** Entry point to C language function: <code> void {@native glGenVertexArraysOES}(GLsizei n, GLuint *  arrays) </code> <br>Part of <code>GL_OES_vertex_array_object</code><br>   */
  public void glGenVertexArraysOES(int n, int[] arrays, int arrays_offset);

  /** Entry point to C language function: <code> GLboolean {@native glIsVertexArrayOES}(GLuint array) </code> <br>Part of <code>GL_OES_vertex_array_object</code><br>   */
  public boolean glIsVertexArrayOES(int array);

  /** Entry point to C language function: <code> void {@native glCopyTextureLevelsAPPLE}(GLuint destinationTexture, GLuint sourceTexture, GLint sourceBaseLevel, GLsizei sourceLevelCount) </code> <br>Part of <code>GL_APPLE_copy_texture_levels</code><br>   */
  public void glCopyTextureLevelsAPPLE(int destinationTexture, int sourceTexture, int sourceBaseLevel, int sourceLevelCount);

  /** Entry point to C language function: <code> void {@native glResolveMultisampleFramebuffer}() </code> <br>Part of <code>GL_APPLE_framebuffer_multisample</code><br>Alias for: <code>glResolveMultisampleFramebufferAPPLE</code>   */
  public void glResolveMultisampleFramebuffer();

  /** Entry point to C language function: <code> void {@native glDiscardFramebufferEXT}(GLenum target, GLsizei numAttachments, const GLenum *  attachments) </code> <br>Part of <code>GL_EXT_discard_framebuffer</code><br>
      @param attachments a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glDiscardFramebufferEXT(int target, int numAttachments, IntBuffer attachments);

  /** Entry point to C language function: <code> void {@native glDiscardFramebufferEXT}(GLenum target, GLsizei numAttachments, const GLenum *  attachments) </code> <br>Part of <code>GL_EXT_discard_framebuffer</code><br>   */
  public void glDiscardFramebufferEXT(int target, int numAttachments, int[] attachments, int attachments_offset);

  /** Entry point to C language function: <code> void {@native glRenderbufferStorageMultisampleEXT}(GLenum, GLsizei, GLenum, GLsizei, GLsizei) </code> <br>Part of <code>GL_EXT_multisampled_render_to_texture</code>, <code>GL_EXT_framebuffer_multisample</code><br>   */
  public void glRenderbufferStorageMultisampleEXT(int arg0, int arg1, int arg2, int arg3, int arg4);

  /** Entry point to C language function: <code> void {@native glFramebufferTexture2DMultisampleEXT}(GLenum, GLenum, GLenum, GLuint, GLint, GLsizei) </code> <br>Part of <code>GL_EXT_multisampled_render_to_texture</code><br>   */
  public void glFramebufferTexture2DMultisampleEXT(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5);

  /** Entry point to C language function: <code> void {@native glClipPlanefIMG}(GLenum, const GLfloat * ) </code> <br>Part of <code>GL_IMG_user_clip_plane</code><br>
      @param arg1 a direct or array-backed {@link java.nio.FloatBuffer}   */
  public void glClipPlanefIMG(int arg0, FloatBuffer arg1);

  /** Entry point to C language function: <code> void {@native glClipPlanefIMG}(GLenum, const GLfloat * ) </code> <br>Part of <code>GL_IMG_user_clip_plane</code><br>   */
  public void glClipPlanefIMG(int arg0, float[] arg1, int arg1_offset);

  /** Entry point to C language function: <code> void {@native glClipPlanexIMG}(GLenum, const GLfixed * ) </code> <br>Part of <code>GL_IMG_user_clip_plane</code><br>
      @param arg1 a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glClipPlanexIMG(int arg0, IntBuffer arg1);

  /** Entry point to C language function: <code> void {@native glClipPlanexIMG}(GLenum, const GLfixed * ) </code> <br>Part of <code>GL_IMG_user_clip_plane</code><br>   */
  public void glClipPlanexIMG(int arg0, int[] arg1, int arg1_offset);

  /** Entry point to C language function: <code> void {@native glRenderbufferStorageMultisampleIMG}(GLenum, GLsizei, GLenum, GLsizei, GLsizei) </code> <br>Part of <code>GL_IMG_multisampled_render_to_texture</code><br>   */
  public void glRenderbufferStorageMultisampleIMG(int arg0, int arg1, int arg2, int arg3, int arg4);

  /** Entry point to C language function: <code> void {@native glFramebufferTexture2DMultisampleIMG}(GLenum, GLenum, GLenum, GLuint, GLint, GLsizei) </code> <br>Part of <code>GL_IMG_multisampled_render_to_texture</code><br>   */
  public void glFramebufferTexture2DMultisampleIMG(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5);

  /** Entry point to C language function: <code> void {@native glGetDriverControlsQCOM}(GLint *  num, GLsizei size, GLuint *  driverControls) </code> <br>Part of <code>GL_QCOM_driver_control</code><br>
      @param num a direct or array-backed {@link java.nio.IntBuffer}
      @param driverControls a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glGetDriverControlsQCOM(IntBuffer num, int size, IntBuffer driverControls);

  /** Entry point to C language function: <code> void {@native glGetDriverControlsQCOM}(GLint *  num, GLsizei size, GLuint *  driverControls) </code> <br>Part of <code>GL_QCOM_driver_control</code><br>   */
  public void glGetDriverControlsQCOM(int[] num, int num_offset, int size, int[] driverControls, int driverControls_offset);

  /** Entry point to C language function: <code> void {@native glGetDriverControlStringQCOM}(GLuint driverControl, GLsizei bufSize, GLsizei *  length, GLchar *  driverControlString) </code> <br>Part of <code>GL_QCOM_driver_control</code><br>
      @param length a direct or array-backed {@link java.nio.IntBuffer}
      @param driverControlString a direct or array-backed {@link java.nio.ByteBuffer}   */
  public void glGetDriverControlStringQCOM(int driverControl, int bufSize, IntBuffer length, ByteBuffer driverControlString);

  /** Entry point to C language function: <code> void {@native glGetDriverControlStringQCOM}(GLuint driverControl, GLsizei bufSize, GLsizei *  length, GLchar *  driverControlString) </code> <br>Part of <code>GL_QCOM_driver_control</code><br>   */
  public void glGetDriverControlStringQCOM(int driverControl, int bufSize, int[] length, int length_offset, byte[] driverControlString, int driverControlString_offset);

  /** Entry point to C language function: <code> void {@native glEnableDriverControlQCOM}(GLuint driverControl) </code> <br>Part of <code>GL_QCOM_driver_control</code><br>   */
  public void glEnableDriverControlQCOM(int driverControl);

  /** Entry point to C language function: <code> void {@native glDisableDriverControlQCOM}(GLuint driverControl) </code> <br>Part of <code>GL_QCOM_driver_control</code><br>   */
  public void glDisableDriverControlQCOM(int driverControl);

  /** Entry point to C language function: <code> void {@native glExtGetTexturesQCOM}(GLuint *  textures, GLint maxTextures, GLint *  numTextures) </code> <br>Part of <code>GL_QCOM_extended_get</code><br>
      @param textures a direct or array-backed {@link java.nio.IntBuffer}
      @param numTextures a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glExtGetTexturesQCOM(IntBuffer textures, int maxTextures, IntBuffer numTextures);

  /** Entry point to C language function: <code> void {@native glExtGetTexturesQCOM}(GLuint *  textures, GLint maxTextures, GLint *  numTextures) </code> <br>Part of <code>GL_QCOM_extended_get</code><br>   */
  public void glExtGetTexturesQCOM(int[] textures, int textures_offset, int maxTextures, int[] numTextures, int numTextures_offset);

  /** Entry point to C language function: <code> void {@native glExtGetBuffersQCOM}(GLuint *  buffers, GLint maxBuffers, GLint *  numBuffers) </code> <br>Part of <code>GL_QCOM_extended_get</code><br>
      @param buffers a direct or array-backed {@link java.nio.IntBuffer}
      @param numBuffers a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glExtGetBuffersQCOM(IntBuffer buffers, int maxBuffers, IntBuffer numBuffers);

  /** Entry point to C language function: <code> void {@native glExtGetBuffersQCOM}(GLuint *  buffers, GLint maxBuffers, GLint *  numBuffers) </code> <br>Part of <code>GL_QCOM_extended_get</code><br>   */
  public void glExtGetBuffersQCOM(int[] buffers, int buffers_offset, int maxBuffers, int[] numBuffers, int numBuffers_offset);

  /** Entry point to C language function: <code> void {@native glExtGetRenderbuffersQCOM}(GLuint *  renderbuffers, GLint maxRenderbuffers, GLint *  numRenderbuffers) </code> <br>Part of <code>GL_QCOM_extended_get</code><br>
      @param renderbuffers a direct or array-backed {@link java.nio.IntBuffer}
      @param numRenderbuffers a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glExtGetRenderbuffersQCOM(IntBuffer renderbuffers, int maxRenderbuffers, IntBuffer numRenderbuffers);

  /** Entry point to C language function: <code> void {@native glExtGetRenderbuffersQCOM}(GLuint *  renderbuffers, GLint maxRenderbuffers, GLint *  numRenderbuffers) </code> <br>Part of <code>GL_QCOM_extended_get</code><br>   */
  public void glExtGetRenderbuffersQCOM(int[] renderbuffers, int renderbuffers_offset, int maxRenderbuffers, int[] numRenderbuffers, int numRenderbuffers_offset);

  /** Entry point to C language function: <code> void {@native glExtGetFramebuffersQCOM}(GLuint *  framebuffers, GLint maxFramebuffers, GLint *  numFramebuffers) </code> <br>Part of <code>GL_QCOM_extended_get</code><br>
      @param framebuffers a direct or array-backed {@link java.nio.IntBuffer}
      @param numFramebuffers a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glExtGetFramebuffersQCOM(IntBuffer framebuffers, int maxFramebuffers, IntBuffer numFramebuffers);

  /** Entry point to C language function: <code> void {@native glExtGetFramebuffersQCOM}(GLuint *  framebuffers, GLint maxFramebuffers, GLint *  numFramebuffers) </code> <br>Part of <code>GL_QCOM_extended_get</code><br>   */
  public void glExtGetFramebuffersQCOM(int[] framebuffers, int framebuffers_offset, int maxFramebuffers, int[] numFramebuffers, int numFramebuffers_offset);

  /** Entry point to C language function: <code> void {@native glExtGetTexLevelParameterivQCOM}(GLuint texture, GLenum face, GLint level, GLenum pname, GLint *  params) </code> <br>Part of <code>GL_QCOM_extended_get</code><br>
      @param params a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glExtGetTexLevelParameterivQCOM(int texture, int face, int level, int pname, IntBuffer params);

  /** Entry point to C language function: <code> void {@native glExtGetTexLevelParameterivQCOM}(GLuint texture, GLenum face, GLint level, GLenum pname, GLint *  params) </code> <br>Part of <code>GL_QCOM_extended_get</code><br>   */
  public void glExtGetTexLevelParameterivQCOM(int texture, int face, int level, int pname, int[] params, int params_offset);

  /** Entry point to C language function: <code> void {@native glExtTexObjectStateOverrideiQCOM}(GLenum target, GLenum pname, GLint param) </code> <br>Part of <code>GL_QCOM_extended_get</code><br>   */
  public void glExtTexObjectStateOverrideiQCOM(int target, int pname, int param);

  /** Entry point to C language function: <code> void {@native glExtGetTexSubImageQCOM}(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLvoid *  texels) </code> <br>Part of <code>GL_QCOM_extended_get</code><br>
      @param texels a direct or array-backed {@link java.nio.Buffer}   */
  public void glExtGetTexSubImageQCOM(int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int type, Buffer texels);

  /** Entry point to C language function: <code> void {@native glExtGetBufferPointervQCOM}(GLenum target, GLvoid *  *  params) </code> <br>Part of <code>GL_QCOM_extended_get</code><br>
      @param params a direct only {@link com.jogamp.common.nio.PointerBuffer}   */
  public void glExtGetBufferPointervQCOM(int target, PointerBuffer params);

  /** Entry point to C language function: <code> void {@native glExtGetShadersQCOM}(GLuint *  shaders, GLint maxShaders, GLint *  numShaders) </code> <br>Part of <code>GL_QCOM_extended_get2</code><br>
      @param shaders a direct or array-backed {@link java.nio.IntBuffer}
      @param numShaders a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glExtGetShadersQCOM(IntBuffer shaders, int maxShaders, IntBuffer numShaders);

  /** Entry point to C language function: <code> void {@native glExtGetShadersQCOM}(GLuint *  shaders, GLint maxShaders, GLint *  numShaders) </code> <br>Part of <code>GL_QCOM_extended_get2</code><br>   */
  public void glExtGetShadersQCOM(int[] shaders, int shaders_offset, int maxShaders, int[] numShaders, int numShaders_offset);

  /** Entry point to C language function: <code> void {@native glExtGetProgramsQCOM}(GLuint *  programs, GLint maxPrograms, GLint *  numPrograms) </code> <br>Part of <code>GL_QCOM_extended_get2</code><br>
      @param programs a direct or array-backed {@link java.nio.IntBuffer}
      @param numPrograms a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glExtGetProgramsQCOM(IntBuffer programs, int maxPrograms, IntBuffer numPrograms);

  /** Entry point to C language function: <code> void {@native glExtGetProgramsQCOM}(GLuint *  programs, GLint maxPrograms, GLint *  numPrograms) </code> <br>Part of <code>GL_QCOM_extended_get2</code><br>   */
  public void glExtGetProgramsQCOM(int[] programs, int programs_offset, int maxPrograms, int[] numPrograms, int numPrograms_offset);

  /** Entry point to C language function: <code> GLboolean {@native glExtIsProgramBinaryQCOM}(GLuint program) </code> <br>Part of <code>GL_QCOM_extended_get2</code><br>   */
  public boolean glExtIsProgramBinaryQCOM(int program);

  /** Entry point to C language function: <code> void {@native glExtGetProgramBinarySourceQCOM}(GLuint program, GLenum shadertype, GLchar *  source, GLint *  length) </code> <br>Part of <code>GL_QCOM_extended_get2</code><br>
      @param source a direct or array-backed {@link java.nio.ByteBuffer}
      @param length a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glExtGetProgramBinarySourceQCOM(int program, int shadertype, ByteBuffer source, IntBuffer length);

  /** Entry point to C language function: <code> void {@native glExtGetProgramBinarySourceQCOM}(GLuint program, GLenum shadertype, GLchar *  source, GLint *  length) </code> <br>Part of <code>GL_QCOM_extended_get2</code><br>   */
  public void glExtGetProgramBinarySourceQCOM(int program, int shadertype, byte[] source, int source_offset, int[] length, int length_offset);

  /** Entry point to C language function: <code> void {@native glStartTilingQCOM}(GLuint x, GLuint y, GLuint width, GLuint height, GLbitfield preserveMask) </code> <br>Part of <code>GL_QCOM_tiled_rendering</code><br>   */
  public void glStartTilingQCOM(int x, int y, int width, int height, int preserveMask);

  /** Entry point to C language function: <code> void {@native glEndTilingQCOM}(GLbitfield preserveMask) </code> <br>Part of <code>GL_QCOM_tiled_rendering</code><br>   */
  public void glEndTilingQCOM(int preserveMask);

} // end of class GLES1
